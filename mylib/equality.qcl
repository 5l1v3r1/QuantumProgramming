include "doubleop";

// flips flag if b1 and b2 are equal bit for bit
operator NotIfEqual(qureg flag, qureg b1, qureg b2) {
    int i;
    
    if #b1 != #b1 {
        exit "Cannot compare buffers of varying length.";
    }
    
    if #b1 == 0 {
        Not(flag);
    } else {
        // all will be 1 if its equal
        for i = 0 to #b1 - 1 {
            CNot(b2[i], b1[i]);
            Not(b2[i]);
        }
    
        StringNot(flag, b2);
        
        // undo our previous operation
        for i = 0 to #b1 - 1 {
            CNot(b2[i], b1[i]);
            Not(b2[i]);
        }
    }
}

// flips flag if b1 and b2 are equal bit for bit and all bits in c are <1|
operator CNotIfEqual(qureg flag, qureg b1, qureg b2, qureg c) {
    int i;
    
    if #b1 != #b1 {
        exit "Cannot compare buffers of varying length.";
    }
    
    if #b1 == 0 {
        Not(flag);
    } else {
        // all will be 1 if its equal
        for i = 0 to #b1 - 1 {
            CNot(b2[i], b1[i]);
            Not(b2[i]);
        }
    
        StringNot(flag, b2 & c);
        
        // undo our previous operation
        for i = 0 to #b1 - 1 {
            CNot(b2[i], b1[i]);
            Not(b2[i]);
        }
    }
}

// flips flag if the qureg b is equivalent to the
// classical bit string realNum
operator NotIfEqualClassical(qureg flag, qureg b, int realNum) {
    int i;
    for i = 0 to #b - 1 {
        if not bit(realNum, i) {
            Not(b[i]);
        }
    }
    StringNot(flag, b);
    for i = 0 to #b - 1 {
        if not bit(realNum, i) {
            Not(b[i]);
        }
    }
}
